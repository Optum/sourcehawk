// Auto-Generated by sourcehawk-enforcer-file-aot
package com.optum.sourcehawk.enforcer.file;

import java.lang.Class;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

/**
 * A registry for all file enforcers
 *
 * @author Brian Wyka
 */
public final class FileEnforcerRegistry {
  /**
   * Mapping of enforcer classes keyed by alias
   */
  private static final Map<String, Class<? extends TestFileEnforcer>> FILE_ENFORCERS;

  static {
    FILE_ENFORCERS = new HashMap<>();
    FILE_ENFORCERS.put("CONCRETE-TEST-FILE-ENFORCER", ConcreteTestFileEnforcer.class);
    FILE_ENFORCERS.put("CONCRETE2-TEST-FILE-ENFORCER", Concrete2TestFileEnforcer.class);
  }

  /**
   * Get the file enforcer for the provided alias
   *
   * @param alias the file enforcer alias@return the file enforcer class
   */
  public static final Optional<Class<? extends TestFileEnforcer>> getEnforcerByAlias(
      final String alias) {
    return Optional.ofNullable(FILE_ENFORCERS.get(alias));
  }

  /**
   * Get the file enforcers
   *
   * @return the file enforcers
   */
  public static final Map<String, Class<? extends TestFileEnforcer>> getEnforcers() {
    return FILE_ENFORCERS;
  }
}
