name: Maven CI
on:
  push:
    branches:
      - main
      - 'releases/[1-9]+.[0-9]+.x'
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'attribute.txt'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'INDIVIDUAL_CONTRIBUTOR_LICENSE.md'
      - 'LICENSE'
      - 'NOTICE.txt'
      - 'OSSMETADATA'
      - 'install-*.sh'
      - '**/*.adoc'
      - '**/*.css'
      - '**/README.md'
  pull_request:
    branches:
      - main
      - 'releases/[1-9]+.[0-9]+.x'
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'attribute.txt'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'INDIVIDUAL_CONTRIBUTOR_LICENSE.md'
      - 'LICENSE'
      - 'NOTICE.txt'
      - 'OSSMETADATA'
      - 'install-*.sh'
      - '**/README.md'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '17']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Setup Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          server-id: ossrh
          server-username: SONATYPE_USERNAME
          server-password: SONATYPE_PASSWORD
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
          gpg-passphrase: SONATYPE_GPG_PASSPHRASE
      - name: Set Maven Project Version
        shell: bash
        run: |
          BUILD_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout | tail -1 | tr -d '\r\n')
          [[ "$BUILD_VERSION" != *"-SNAPSHOT" ]] && BUILD_VERSION="${BUILD_VERSION}-SNAPSHOT" && ./mvnw --batch-mode versions:set -DnewVersion=$BUILD_VERSION || true
      - name: Build Maven Project
        if: success() && (github.event_name == 'pull_request' || (github.event_name == 'push' && matrix.java != '8'))
        run: ./mvnw --batch-mode install -D ci.build
      - name: Build Maven Project and Deploy Snapshot
        if: success() && (github.event_name == 'push' && matrix.java == '8')
        run: ./mvnw --batch-mode deploy -D ci.build -D ci.deploy -D ci.snapshot
        env:
          BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Archive Native Image JAR
        if: success() && (matrix.java == '11')
        uses: actions/upload-artifact@v2
        with:
          name: native-image
          path: cli/target/*-native-image.jar
      - name: Archive Bash Completion Script
        if: success() && (matrix.java == '11')
        uses: actions/upload-artifact@v2
        with:
          name: bash-completion-script
          path: cli/target/sourcehawk-bash-completion.sh
      - name: Archive Manpages
        if: success() && (matrix.java == '11')
        uses: actions/upload-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages/sourcehawk*.1
      - name: Aggregate Coverage Reports
        id: aggregate_coverage_reports
        if: success() && (matrix.java == '11')
        run: echo ::set-output name=JACOCO_XML_REPORT_PATHS::$(find . -name "jacoco.xml" -printf '%P\n' | tr '\r\n' ',')
      - name: Analyze with SonarCloud
        if: success() && (github.event_name == 'push' && matrix.java == '11')
        continue-on-error: true
        run: ./mvnw --batch-mode sonar:sonar -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      - name: Publish Test Report
        if: always()
        continue-on-error: true
        uses: scacap/action-surefire-report@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/target/surefire-reports/TEST-*.xml,**/target/failsafe-reports/TEST-*.xml'
  build-mac-native-image:
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: native-image
          path: build
      - uses: actions/download-artifact@v2
        with:
          name: bash-completion-script
          path: build
      - uses: actions/download-artifact@v2
        with:
          name: manpages
          path: build
      - name: Rename Native Image JAR
        working-directory: build
        run: mv *.jar native-image.jar
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '21.3.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Mac Native Image
        if: success()
        working-directory: build
        run: native-image -cp native-image.jar -H:+ReportExceptionStackTraces --report-unsupported-elements-at-runtime --no-fallback
      - name: Create Homebrew Tap Formula Archive
        if: success()
        working-directory: build
        run: gzip sourcehawk*.1 && tar -czvf sourcehawk-homebrew-tap-formula.tar.gz sourcehawk sourcehawk-bash-completion.sh sourcehawk*.1.gz
      - name: Archive Mac Native Image
        if: success()
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: mac-native-image
          path: build/sourcehawk
      - name: Archive Homebrew Tap Formula Archive
        if: success()
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: homebrew-tap-formula
          path: build/sourcehawk-homebrew-tap-formula.tar.gz
      - name: Smoke Test
        if: success()
        working-directory: build
        run: ./sourcehawk help
  build-windows-native-image:
    runs-on: windows-latest
    needs: build
    continue-on-error: true
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: native-image
          path: build
      - name: Rename Native Image JAR
        working-directory: build
        run: ren *.jar native-image.jar
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '20.3.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Windows Native Image
        if: success()
        run: native-image.cmd -cp .\build\native-image.jar -H:+ReportExceptionStackTraces --report-unsupported-elements-at-runtime
      - name: Archive Windows Native Image
        if: success()
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: windows-native-image
          path: sourcehawk.exe
      - name: Smoke Test
        if: success()
        shell: cmd
        run: sourcehawk.exe help
