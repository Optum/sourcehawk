name: Maven CI

on:
  push:
    branches:
      - $default-branch
      - 'releases/[1-9]+.[0-9]+.x'
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'attribute.txt'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'INDIVIDUAL_CONTRIBUTOR_LICENSE.md'
      - 'LICENSE'
      - 'NOTICE.txt'
      - 'OSSMETADATA'
      - 'install-*.sh'
      - '**/*.adoc'
      - '**/*.css'
      - '**/README.md'
  pull_request:
    branches:
      - $default-branch
      - 'releases/[1-9]+.[0-9]+.x'
    paths-ignore:
      - '.github/**'
      - '.gitignore'
      - 'attribute.txt'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'INDIVIDUAL_CONTRIBUTOR_LICENSE.md'
      - 'LICENSE'
      - 'NOTICE.txt'
      - 'OSSMETADATA'
      - 'install-*.sh'
      - '**/README.md'

env:
  PRIMARY_JAVA_VERSION: '11'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['11', '17']
    name: build-java-${{ matrix.java }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Maven Prepare
        id: maven-prepare
        uses: optum/sourcehawk/.github/actions/maven-prepare@workflow-updates
        with:
          cache-key-suffix: build-java
          java-version: ${{ matrix.java }}
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
      - name: Build Maven Project
        if: success() && (github.event_name == 'pull_request' || (github.event_name == 'push' && matrix.java != env.PRIMARY_JAVA_VERSION))
        run: ./mvnw --batch-mode --update-snapshots install -D ci.build
      - name: Build Maven Project and Deploy Snapshots
        if: success() && (github.event_name == 'push' && matrix.java == env.PRIMARY_JAVA_VERSION)
        run: ./mvnw --batch-mode --update-snapshots deploy -D ci.build -D ci.deploy -D ci.snapshot
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Publish Test Report
        if: always()
        continue-on-error: true
        uses: dorny/test-reporter@v1
        with:
          name: test-report-java-${{ matrix.java }}
          path: '**/target/surefire-reports/TEST-*.xml,**/target/failsafe-reports/TEST-*.xml'
          reporter: java-junit
      - name: Archive Native Image JAR
        if: success() && (matrix.java == env.PRIMARY_JAVA_VERSION)
        uses: actions/upload-artifact@v2
        with:
          name: native-image-jar
          path: cli/target/*-native-image.jar
      - name: Archive Completion Script
        if: success() && (matrix.java == env.PRIMARY_JAVA_VERSION)
        uses: actions/upload-artifact@v2
        with:
          name: completion-script
          path: cli/target/sourcehawk-completion.sh
      - name: Archive Manpages
        if: success() && (matrix.java == env.PRIMARY_JAVA_VERSION)
        uses: actions/upload-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages/sourcehawk*.1
      - name: Analyze with SonarCloud
        if: success() && (github.event_name == 'push' && matrix.java == env.PRIMARY_JAVA_VERSION)
        continue-on-error: true
        run: ./mvnw --batch-mode sonar:sonar -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
  build-linux-native-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Download Manpages
        uses: actions/download-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages
      - name: Maven Prepare
        uses: optum/sourcehawk/.github/actions/maven-prepare@workflow-updates
        with:
          cache-key-suffix: build-linux-native-image
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
      - name: Build Native Image
        if: success() && (github.event_name == 'pull_request')
        run: ./mvnw --batch-mode --update-snapshots install -D ci.build -D dist.build -pl distributions,distributions/linux
      - name: Build Native Image
        if: success() && (github.event_name == 'push')
        run: ./mvnw --batch-mode --update-snapshots deploy -D ci.build -D ci.deploy -D ci.snapshot -D dist.build -pl distributions,distributions/linux
        env:
          BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Publish Test Report
        if: always()
        continue-on-error: true
        uses: dorny/test-reporter@v1
        with:
          name: test-report-linux-native-image
          path: 'distributions/linux/**/target/surefire-reports/TEST-*.xml,distributions/linux/**/target/failsafe-reports/TEST-*.xml'
          reporter: java-junit
      - name: Archive Linux Native Image
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: linux-native-image
          path: distributions/linux/target/sourcehawk
  build-linux-distribution:
    runs-on: ubuntu-latest
    needs: build-linux-native-image
    strategy:
      matrix:
        dist: ['debian', 'rpm', 'docker']
    name: build-linux-distribution-${{ matrix.dist }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Download Manpages
        uses: actions/download-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages
      - name: Maven Prepare
        uses: optum/sourcehawk/.github/actions/maven-prepare@workflow-updates
        with:
          cache-key-suffix: build-linux-distribution
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
      - name: Build Distribution
        if: success() && (github.event_name == 'pull_request')
        run: ./mvnw --batch-mode --update-snapshots install -D ci.build -D dist.build -pl distributions/${{ matrix.dist }}
      - name: Build Distributions and Publish Snapshots
        if: success() && (github.event_name == 'push')
        run: ./mvnw --batch-mode --update-snapshots deploy -D ci.build -D ci.deploy -D ci.snapshot -D dist.build -pl distributions/${{ matrix.dist }}
        env:
          BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Publish Test Report
        if: (matrix.java == env.PRIMARY_JAVA_VERSION)
        continue-on-error: true
        uses: dorny/test-reporter@v1
        with:
          name: test-report-linux-distribution-${{ matrix.dist }}
          path: distributions/${{ matrix.dist }}/target/surefire-reports/TEST-*.xml,distributions/${{ matrix.dist }}/target/failsafe-reports/TEST-*.xml
          reporter: java-junit
      - name: Archive Distribution
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: linux-dist-${{ matrix.dist }}
          path: distributions/${{ matrix.dist }}/target/**
  build-mac-native-image:
    runs-on: macos-latest
    needs: build
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-native-image@workflow-updates
        with:
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          artifact-name: mac-native-image
  build-homebrew-tap-formula-archive:
    runs-on: macos-latest
    needs: build-mac-native-image
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-homebrew-tap-formula-archive@workflow-updates
  build-windows-native-image:
    runs-on: windows-latest
    needs: build
    continue-on-error: true
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-windows-native-image@workflow-updates
        with:
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
