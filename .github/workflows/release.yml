name: Release

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Github Ref'
        required: false
        default: 'main'
      draft:
        description: 'Is the release a draft?'
        required: false
        default: 'false'
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        default: 'false'

env:
  PRIMARY_JAVA_VERSION: '11'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      RELEASE_VERSION: ${{ steps.set_maven_project_version.outputs.RELEASE_VERSION }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Setup Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          server-id: ossrh
          server-username: SONATYPE_USERNAME
          server-password: SONATYPE_PASSWORD
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
          gpg-passphrase: SONATYPE_GPG_PASSPHRASE
      - name: Set Maven Project Version
        id: set_maven_project_version
        shell: bash
        run: |
          RELEASE_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout | tail -1 | tr -d '\r\n')
          [[ "$RELEASE_VERSION" == *"-SNAPSHOT" ]] && RELEASE_VERSION="${RELEASE_VERSION%"-SNAPSHOT"}" && ./mvnw --batch-mode versions:set -D removeSnapshot || true
          [[ "$(git tag -l $RELEASE_VERSION)" == "$RELEASE_VERSION" ]] && echo "Tag $RELEASE_VERSION already exists" && exit 1
          echo ::set-output name=RELEASE_VERSION::$RELEASE_VERSION
      - name: Build Maven Project and Deploy Release
        if: success()
        run: ./mvnw --batch-mode deploy -D ci.build -D ci.deploy -D ci.release
        env:
          BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Archive Workspace
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: workspace
          path: ${{ github.workspace }}
      - name: Archive Native Image JAR
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: native-image-jar
          path: cli/target/*-native-image.jar
      - name: Archive Completion Script
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: completion-script
          path: cli/target/sourcehawk-completion.sh
      - name: Archive Manpages
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages/sourcehawk*.1
  release:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      RELEASE_ASSET_UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v2
        with:
          name: workspace
      - name: Git Tag
        if: success()
        run: |
          git config user.name "$GIT_USERNAME" && git config user.email "$GIT_EMAIL"
          git tag -a "v$RELEASE_VERSION" -m "Release v$RELEASE_VERSION created by @$GITHUB_ACTOR"
          git push origin --tags
        env:
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          RELEASE_VERSION: ${{ needs.build.outputs.RELEASE_VERSION }}
      - name: Generate Changelog
        if: success()
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          futureRelease: ${{ format('v{0}', needs.build.outputs.RELEASE_VERSION) }}
          output: CHANGELOG.md
          releaseBranch: ${{ github.event.inputs.ref }}
          stripGeneratorNotice: true
          token: ${{ secrets.GITHUB_TOKEN }}
          usernamesAsGithubLogins: true
      - name: Create Release
        if: success()
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('v{0}', needs.build.outputs.RELEASE_VERSION) }}
          release_name: ${{ format('{0} {1}', github.event.repository.name, needs.build.outputs.RELEASE_VERSION) }}
          body_path: CHANGELOG.md
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
      - name: Upload Sourcehawk Linux Executable
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/linux/target/sourcehawk
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-linux-x86_64
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Debian Buster Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/debian/target/sourcehawk-debian-buster.deb
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-debian-buster-amd64.deb
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Ubuntu Focal Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/debian/target/sourcehawk-ubuntu-focal.deb
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-ubuntu-focal-amd64.deb
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Centos 7 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-centos-7.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.el7.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Centos 8 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-centos-8.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.el8.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 33 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-fedora-33.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.fc33.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 34 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-fedora-34.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.fc34.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 35 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-fedora-35.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.fc35.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Publish Github Pages
        if: success()
        continue-on-error: true
        uses: jamesives/github-pages-deploy-action@3.7.1
        with:
          COMMIT_MESSAGE: ${{ format('Publishing github pages for release version {0}', needs.build.outputs.RELEASE_VERSION) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: gh-pages
  build-mac-native-image:
    runs-on: macos-latest
    needs: build
    steps:
      - name: Download Native Image JAR
        uses: actions/download-artifact@v2
        with:
          name: native-image-jar
          path: build
      - name: Rename Native Image JAR
        working-directory: build
        run: mv *.jar native-image.jar
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '21.3.0'
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Native Image
        if: success()
        working-directory: build
        run: native-image -cp native-image.jar -H:+ReportExceptionStackTraces --report-unsupported-elements-at-runtime --no-fallback
      - name: Smoke Test
        if: success()
        working-directory: build
        run: ./sourcehawk help
      - name: Archive Mac Native Image
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: mac-native-image
          path: build/sourcehawk
      - name: Upload Binary Release Asset
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.RELEASE_ASSET_UPLOAD_URL }}
          asset_path: build/sourcehawk
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-darwin-x86_64
          asset_content_type: application/octet-stream
  build-homebrew-tap-formula-archive:
    runs-on: macos-latest
    needs: build-mac-native-image
    steps:
      - name: Download Mac Native Image
        uses: actions/download-artifact@v2
        with:
          name: mac-native-image
          path: build
      - name: Download Completion Script
        uses: actions/download-artifact@v2
        with:
          name: completion-script
          path: build
      - name: Download Manpages
        uses: actions/download-artifact@v2
        with:
          name: manpages
          path: build
      - name: Create Homebrew Tap Formula Archive
        if: success()
        working-directory: build
        run: |
          chmod +x sourcehawk
          cp sourcehawk-completion.sh sourcehawk-bash-completion.sh
          cp sourcehawk-completion.sh sourcehawk-zsh-completion.sh
          chmod +x *.sh
          gzip sourcehawk*.1
          tar -cvf sourcehawk-homebrew-tap-formula.tar.gz sourcehawk*
      - name: Archive Homebrew Tap Formula Archive
        if: success()
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: homebrew-tap-formula-archive
          path: build/sourcehawk-homebrew-tap-formula.tar.gz
  update-homebrew-tap:
    runs-on: macos-latest
    needs: build-homebrew-tap-formula-archive
    steps:
      - name: Download Homebrew Tap Formula Archive
        uses: actions/download-artifact@v2
        with:
          name: homebrew-tap-formula-archive
          path: homebrew
      - name: Upload Homebrew Tap Formula Archive
        id: upload_homebrew_tap_formula_archive
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.RELEASE_ASSET_UPLOAD_URL }}
          asset_path: homebrew/sourcehawk-homebrew-tap-formula.tar.gz
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-darwin-x86_64.tar.gz
          asset_content_type: application/octet-stream
      - name: Update Optum Homebrew Tap Formula
        uses: mislav/bump-homebrew-formula-action@v1.16
        continue-on-error: true
        with:
          formula-name: sourcehawk
          tag-name: ${{ needs.build.outputs.RELEASE_VERSION }}
          homebrew-tap: optum/homebrew-tap
          base-branch: main
          download-url: ${{ steps.upload_homebrew_tap_formula_archive.outputs.browser_download_url }}
          commit-message: |
            Sourcehawk ${{ needs.build.outputs.RELEASE_VERSION }}
            
            Updating sourcehawk formula to latest release version
        env:
          COMMITTER_TOKEN: ${{ secrets.GIT_COMMITTER_TOKEN }}
  build-windows-native-image:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download Native Image JAR
        uses: actions/download-artifact@v2
        with:
          name: native-image-jar
          path: build
      - name: Rename Native Image JAR
        working-directory: build
        run: ren *.jar native-image.jar
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '20.3.0'
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Native Image
        if: success()
        run: native-image.cmd -cp .\build\native-image.jar -H:+ReportExceptionStackTraces --report-unsupported-elements-at-runtime
      - name: Smoke Test
        if: success()
        shell: cmd
        run: sourcehawk.exe help
      - name: Upload Binary Release Asset
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.RELEASE_ASSET_UPLOAD_URL }}
          asset_path: sourcehawk.exe
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-windows-x86_64.exe
          asset_content_type: application/octet-stream
