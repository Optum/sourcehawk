name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (tag must exist)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        default: 'false'
        type: boolean

env:
  PRIMARY_JAVA_VERSION: '11'

jobs:

  build:
    runs-on: ubuntu-latest
    name: Build Java 11
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: ${{ format('v{0}', github.event.inputs.version) }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Maven Prepare
        id: maven-prepare
        uses: optum/sourcehawk/.github/actions/maven-prepare@main
        with:
          cache-key-suffix: build
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
          build-version: ${{ github.event.inputs.version }}
      - name: Build Maven Project and Deploy Releases to Sonatype OSSRH
        if: success()
        run: ./mvnw -B -D ci.build -D ci.deploy -D ci.release deploy
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Archive Github Pages Site
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: gh-pages-site
          path: gh-pages
      - name: Archive Native Image JAR
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: native-image-jar
          path: cli/target/*-native-image.jar
      - name: Archive Completion Script
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: completion-script
          path: cli/target/sourcehawk-completion.sh
      - name: Archive Manpages
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages/sourcehawk*.1

  create-release:
    runs-on: ubuntu-latest
    needs: build
    name: Create Release
    outputs:
      release-asset-upload-url: ${{ needs.create-release.outputs.release-asset-upload-url }}
    steps:
      - name: Create Release
        if: success()
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('v{0}', github.event.inputs.version) }}
          release_name: ${{ format('{0} {1}', github.event.repository.name, github.event.inputs.version) }}
          body: 'TODO: fill out changelog'
          draft: true
          prerelease: ${{ github.event.inputs.prerelease }}

  update-github-pages:
    runs-on: ubuntu-latest
    needs: create-release
    name: Update Github Pages
    steps:
      - name: Download Github Pages Site
        uses: actions/download-artifact@v2
        with:
          name: gh-pages-site
          path: gh-pages
      - name: Publish Github Pages
        continue-on-error: true
        uses: jamesives/github-pages-deploy-action@3.7.1
        with:
          COMMIT_MESSAGE: ${{ format('Publishing github pages for release version {0}', github.event.inputs.version) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: gh-pages

  build-linux-native-image:
    runs-on: ubuntu-latest
    needs: create-release
    name: Build Native Image - Linux
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Download Manpages
        uses: actions/download-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages
      - name: Maven Prepare
        uses: optum/sourcehawk/.github/actions/maven-prepare@main
        with:
          cache-key-suffix: build-linux-native-image
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          build-version: ${{ github.event.inputs.version }}
      - name: Build Native Image
        if: success()
        run: ./mvnw -B -D ci.build -D ci.deploy -D ci.release -D dist.build -pl distributions,distributions/linux deploy
      - name: Archive Native Image
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: linux-native-image
          path: distributions/linux/target/sourcehawk
      - name: Upload Sourcehawk Linux Executable
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: ./distributions/linux/target/sourcehawk
          asset_name: sourcehawk-${{ github.event.inputs.version }}-linux-x86_64
          asset_content_type: application/octet-stream
          
  build-linux-distribution:
    runs-on: ubuntu-latest
    needs: build-linux-native-image
    strategy:
      matrix:
        dist: ['debian', 'rpm', 'docker']
    name: Build Linux Distribution - ${{ matrix.dist }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Download Manpages
        uses: actions/download-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages
      - name: Maven Prepare
        uses: optum/sourcehawk/.github/actions/maven-prepare@main
        with:
          cache-key-suffix: build-linux-distribution
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          build-version: ${{ github.event.inputs.version }}
      - name: Build Distribution
        if: success() && (github.event_name == 'push')
        run: ./mvnw -B -D ci.build -D ci.deploy -D ci.release -D dist.build -pl distributions/${{ matrix.dist }} deploy
        env:
          BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
      - name: Archive Distribution
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: linux-dist-${{ matrix.dist }}
          path: distributions/${{ matrix.dist }}/target/**

  upload-linux-distribution-release-assets:
    runs-on: ubuntu-latest
    needs: build-linux-distribution
    name: Upload Linux Distribution Release Assets
    steps:
      - name: Download Debian Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-dist-debian
          path: debian
      - name: Upload Sourcehawk Debian Buster Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: ./debian/sourcehawk-debian-buster.deb
          asset_name: sourcehawk-${{ github.event.inputs.version }}-debian-buster-amd64.deb
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Ubuntu Focal Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: ./debian/sourcehawk-ubuntu-focal.deb
          asset_name: sourcehawk-${{ github.event.inputs.version }}-ubuntu-focal-amd64.deb
          asset_content_type: application/octet-stream
      - name: Download RPM Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-dist-rpm
          path: rpm
      - name: Upload Sourcehawk Centos 7 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: ./rpm/sourcehawk-centos-7.rpm
          asset_name: sourcehawk-${{ github.event.inputs.version }}-1.el7.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Centos 8 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: ./rpm/sourcehawk-centos-8.rpm
          asset_name: sourcehawk-${{ github.event.inputs.version }}-1.el8.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 33 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: ./rpm/sourcehawk-fedora-33.rpm
          asset_name: sourcehawk-${{ github.event.inputs.version }}-1.fc33.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 34 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: ./rpm/sourcehawk-fedora-34.rpm
          asset_name: sourcehawk-${{ github.event.inputs.version }}-1.fc34.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 35 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: ./rpm/sourcehawk-fedora-35.rpm
          asset_name: sourcehawk-${{ github.event.inputs.version }}-1.fc35.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Publish Github Pages
        if: success()
        continue-on-error: true
        uses: jamesives/github-pages-deploy-action@3.7.1
        with:
          COMMIT_MESSAGE: ${{ format('Publishing github pages for release version {0}', github.event.inputs.version) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: gh-pages

  build-mac-native-image:
    runs-on: macos-latest
    needs: create-release
    name: Build Native Image - Mac
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-native-image@main
        with:
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          artifact-name: mac-native-image
      - name: Upload Binary Release Asset
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: build/sourcehawk
          asset_name: sourcehawk-${{ github.event.inputs.version }}-darwin-x86_64
          asset_content_type: application/octet-stream

  build-homebrew-tap-formula-archive:
    runs-on: macos-latest
    needs: build-mac-native-image
    name: Build Homebrew Tap Formula Archive
    outputs:
      download-url: ${{ steps.upload.outputs.browser_download_url }}
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-homebrew-tap-formula-archive@main
      - name: Upload Homebrew Tap Formula Archive
        id: upload
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release-asset-upload-url }}
          asset_path: homebrew/sourcehawk-homebrew-tap-formula.tar.gz
          asset_name: sourcehawk-${{ github.event.inputs.version }}-darwin-x86_64.tar.gz
          asset_content_type: application/octet-stream

  update-homebrew-tap-formula:
    uses: optum/sourcehawk/.github/workflows/update-homebrew-tap-formula.yml@main
    needs: build-homebrew-tap-formula-archive
    with:
      version: ${{ github.event.inputs.version }}
      download-url: ${{ needs.build-homebrew-tap-formula-archive.outputs.download-url }}
    secrets:
      git-committer-token: ${{ secrets.GIT_COMMITTER_TOKEN }}

  build-windows-native-image:
    runs-on: windows-latest
    needs: create-release
    name: Build Native Image - Windows
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-windows-native-image@main
        with:
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Binary Release Asset
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.release-asset-upload-url }}
          asset_path: build/sourcehawk.exe
          asset_name: sourcehawk-${{ github.event.inputs.version }}-windows-x86_64.exe
          asset_content_type: application/octet-stream
