name: Release

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Github Ref'
        required: false
        default: 'main'
      draft:
        description: 'Is the release a draft?'
        required: false
        default: 'false'
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        default: 'false'

env:
  PRIMARY_JAVA_VERSION: '11'

jobs:

  build:
    runs-on: ubuntu-latest
    name: Build Java - ${{ env.PRIMARY_JAVA_VERSION }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      RELEASE_VERSION: ${{ steps.maven-prepare.outputs.build-version }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Maven Prepare
        id: maven-prepare
        uses: optum/sourcehawk/.github/actions/maven-prepare@workflow-updates
        with:
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          gpg-private-key: ${{ secrets.SONATYPE_GPG_PRIVATE_KEY }}
      - name: Build Maven Project and Deploy Release
        if: success()
        run: ./mvnw -B deploy -D ci.build -D ci.deploy -D ci.release
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Build Linux Distributions and Deploy Release
        if: success()
        run: ./mvnw -B deploy -D ci.build -D ci.deploy -D ci.release -D dist.build -rf :sourcehawk-dist
        env:
          BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_GPG_PASSPHRASE: ${{ secrets.SONATYPE_GPG_PASSPHRASE }}
      - name: Git Tag
        if: success()
        run: |
          git config user.name "$GIT_USERNAME" && git config user.email "$GIT_EMAIL"
          git tag -a "v$RELEASE_VERSION" -m "Release v$RELEASE_VERSION created by @$GITHUB_ACTOR"
          git push origin --tags
        env:
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          RELEASE_VERSION: ${{ needs.build.outputs.RELEASE_VERSION }}
      - name: Generate Changelog
        if: success()
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          futureRelease: ${{ format('v{0}', needs.build.outputs.RELEASE_VERSION) }}
          output: CHANGELOG.md
          releaseBranch: ${{ github.event.inputs.ref }}
          stripGeneratorNotice: true
          token: ${{ secrets.GITHUB_TOKEN }}
          usernamesAsGithubLogins: true
      - name: Archive Worksapce
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: workspace
          path: ${{ github.workspace }}
      - name: Archive Changelog
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md
      - name: Archive Native Image JAR
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: native-image-jar
          path: cli/target/*-native-image.jar
      - name: Archive Completion Script
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: completion-script
          path: cli/target/sourcehawk-completion.sh
      - name: Archive Manpages
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: manpages
          path: gh-pages/manpages/sourcehawk*.1

  release:
    runs-on: ubuntu-latest
    needs: build
    name: Release
    outputs:
      RELEASE_ASSET_UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Download Workspace
        uses: actions/download-artifact@v2
        with:
          name: workspace
      - name: Download Changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
          path: release
      - name: Create Release
        if: success()
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('v{0}', needs.build.outputs.RELEASE_VERSION) }}
          release_name: ${{ format('{0} {1}', github.event.repository.name, needs.build.outputs.RELEASE_VERSION) }}
          body_path: release/CHANGELOG.md
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
      - name: Upload Sourcehawk Linux Executable
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/linux/target/sourcehawk
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-linux-x86_64
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Debian Buster Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/debian/target/sourcehawk-debian-buster.deb
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-debian-buster-amd64.deb
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Ubuntu Focal Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/debian/target/sourcehawk-ubuntu-focal.deb
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-ubuntu-focal-amd64.deb
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Centos 7 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-centos-7.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.el7.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Centos 8 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-centos-8.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.el8.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 33 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-fedora-33.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.fc33.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 34 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-fedora-34.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.fc34.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Upload Sourcehawk Fedora 35 RPM Package
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distributions/rpm/target/sourcehawk-fedora-35.rpm
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-1.fc35.x86_64.rpm
          asset_content_type: application/octet-stream
      - name: Publish Github Pages
        if: success()
        continue-on-error: true
        uses: jamesives/github-pages-deploy-action@3.7.1
        with:
          COMMIT_MESSAGE: ${{ format('Publishing github pages for release version {0}', needs.build.outputs.RELEASE_VERSION) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: gh-pages

  build-mac-native-image:
    runs-on: macos-latest
    needs: build
    name: Build Native Image - Mac
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-native-image@workflow-updates
        with:
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          artifact-name: mac-native-image
      - name: Upload Binary Release Asset
        if: success()
        continue-on-error: true
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.RELEASE_ASSET_UPLOAD_URL }}
          asset_path: build/sourcehawk
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-darwin-x86_64
          asset_content_type: application/octet-stream

  build-homebrew-tap-formula-archive:
    runs-on: macos-latest
    needs: build-mac-native-image
    name: Build Homebrew Tap Formula Archive
    outputs:
      DOWNLOAD_URL: ${{ steps.upload.outputs.browser_download_url }}
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-homebrew-tap-formula-archive@workflow-updates
      - name: Upload Homebrew Tap Formula Archive
        id: upload
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.RELEASE_ASSET_UPLOAD_URL }}
          asset_path: homebrew/sourcehawk-homebrew-tap-formula.tar.gz
          asset_name: sourcehawk-${{ needs.build.outputs.RELEASE_VERSION }}-darwin-x86_64.tar.gz
          asset_content_type: application/octet-stream

  update-homebrew-tap-formula:
    uses: optum/sourcehawk/.github/workflows/update-homebrew-tap-formula@main
    needs: build-homebrew-tap-formula-archive
    with:
      version: ${{ needs.build.outputs.RELEASE_VERSION }}
      download-url: ${{ needs.build-homebrew-tap-formula-archive.outputs.DOWNLOAD_URL }}
    secrets:
      git-committer-token: ${{ secrets.GIT_COMMITTER_TOKEN }}

  build-windows-native-image:
    runs-on: windows-latest
    needs: build
    name: Build Native Image - Windows
    steps:
      - name: Build
        uses: optum/sourcehawk/.github/actions/build-windows-native-image@workflow-updates
        with:
          java-version: ${{ env.PRIMARY_JAVA_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
