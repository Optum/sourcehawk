name: 'Prepare Maven'
description: 'Prepare maven for the build'

inputs:
  cache-key-suffix:
    description: 'Cache Key Suffix for maven caching'
    required: true
  primary-java-version:
    description: 'Primary Java Version'
    required: true
    default: '11'
  java-version:
    description: 'Java Version'
    required: true
  gpg-private-key:
    description: 'GPG Private Key'
    required: false
  release:
    description: 'Release build?'
    required: true
    default: 'false'

outputs:
  build-version:
    description: "Build Version"
    value: ${{ steps.set-maven-project-version.outputs.build-version }}

runs:
  using: "composite"
  steps:
    - name: Setup Maven Cache
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ inputs.java-version }}-${{ inputs.cache-key-suffix }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-${{ inputs.java-version }}-${{ inputs.cache-key-suffix }}
          ${{ runner.os }}-maven-${{ inputs.java-version }}-
    - name: Setup Sonar Cache
      if: (github.event_name == 'push' && inputs.java-version == inputs.primary-java-version)
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Setup Java and Maven
      uses: actions/setup-java@v2
      with:
        java-version: ${{ inputs.java-version }}
        distribution: 'adopt'
        architecture: x64
        server-id: ossrh
        server-username: SONATYPE_USERNAME
        server-password: SONATYPE_PASSWORD
        gpg-private-key: ${{ inputs.gpg-private-key || '' }}
        gpg-passphrase: SONATYPE_GPG_PASSPHRASE
    - name: Read Maven Project Version
      id: read-maven-project-version
      shell: bash
      run: |
        POM_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout | tail -1 | tr -d '\r\n')
        echo ::set-output name=pom-version::$POM_VERSION
    - name: Set Maven Project Version
      id: set-maven-project-version
      shell: bash
      run: |
        if [[ "$RELEASE_BUILD" = true ]];
        then
          if [[ "$POM_VERSION" == *"-SNAPSHOT" ]]; 
          then
            BUILD_VERSION="${POM_VERSION%"-SNAPSHOT"}"
            ./mvnw -B versions:set -D removeSnapshot || true
          else
            BUILD_VERSION="$POM_VERSION"
          fi
          [[ "$(git tag -l $BUILD_VERSION)" == "$BUILD_VERSION" ]] && echo "Tag $BUILD_VERSION already exists" && exit 1
        else
          if [[ "$POM_VERSION" != *"-SNAPSHOT" ]]; 
          then
            BUILD_VERSION="$POM_VERSION-SNAPSHOT"
            ./mvnw -B versions:set -DnewVersion="$BUILD_VERSION" || true
          else
            BUILD_VERSION="$POM_VERSION"
          fi
        fi
        echo ::set-output name=build-version::$BUILD_VERSION
      env:
        POM_VERSION: ${{ steps.read-maven-project-version.outputs.pom-version }}
        RELEASE_BUILD: ${{ inputs.release }}